{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/public_sans_1bc6418c.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"public_sans_1bc6418c-module__6uzjwa__className\",\n  \"variable\": \"public_sans_1bc6418c-module__6uzjwa__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 11, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/public_sans_1bc6418c.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Public_Sans%22,%22arguments%22:[{%22variable%22:%22--font-public-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22publicSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Public Sans', 'Public Sans Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,sKAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,sKAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,sKAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/app/commitmono_fb7faa13.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"commitmono_fb7faa13-module__mMvywG__className\",\n  \"variable\": \"commitmono_fb7faa13-module__mMvywG__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/ashutosh/Attack%20Capital/assignment/frontend/app/commitmono_fb7faa13.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/local/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22%22,%22arguments%22:[{%22src%22:[{%22path%22:%22./fonts/CommitMono-400-Regular.otf%22,%22weight%22:%22400%22,%22style%22:%22normal%22},{%22path%22:%22./fonts/CommitMono-700-Regular.otf%22,%22weight%22:%22700%22,%22style%22:%22normal%22},{%22path%22:%22./fonts/CommitMono-400-Italic.otf%22,%22weight%22:%22400%22,%22style%22:%22italic%22},{%22path%22:%22./fonts/CommitMono-700-Italic.otf%22,%22weight%22:%22700%22,%22style%22:%22italic%22}],%22variable%22:%22--font-commit-mono%22}],%22variableName%22:%22commitMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'commitMono', 'commitMono Fallback'\",\n        \n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,iJAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;IAEhB;AACJ;AAEA,IAAI,iJAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,iJAAS,CAAC,QAAQ;AAC1C;uCAEe","debugId":null}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///Users/ashutosh/Attack%20Capital/assignment/frontend/app-config.ts"],"sourcesContent":["import type { AppConfig } from './lib/types';\n\nexport const APP_CONFIG_DEFAULTS: AppConfig = {\n  companyName: 'LiveKit',\n  pageTitle: 'LiveKit Voice Agent',\n  pageDescription: 'A voice agent built with LiveKit',\n\n  supportsChatInput: true,\n  supportsVideoInput: true,\n  supportsScreenShare: true,\n  isPreConnectBufferEnabled: true,\n\n  logo: '/lk-logo.svg',\n  accent: '#002cf2',\n  logoDark: '/lk-logo-dark.svg',\n  accentDark: '#1fd5f9',\n  startButtonText: 'Start call',\n\n  agentName: undefined,\n};\n"],"names":[],"mappings":";;;;AAEO,MAAM,sBAAiC;IAC5C,aAAa;IACb,WAAW;IACX,iBAAiB;IAEjB,mBAAmB;IACnB,oBAAoB;IACpB,qBAAqB;IACrB,2BAA2B;IAE3B,MAAM;IACN,QAAQ;IACR,UAAU;IACV,YAAY;IACZ,iBAAiB;IAEjB,WAAW;AACb","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///Users/ashutosh/Attack%20Capital/assignment/frontend/lib/utils.ts"],"sourcesContent":["import { cache } from 'react';\nimport { type ClassValue, clsx } from 'clsx';\nimport { Room } from 'livekit-client';\nimport { twMerge } from 'tailwind-merge';\nimport type { ReceivedChatMessage, TextStreamData } from '@livekit/components-react';\nimport { APP_CONFIG_DEFAULTS } from '@/app-config';\nimport type { AppConfig, SandboxConfig } from './types';\n\nexport const CONFIG_ENDPOINT = process.env.NEXT_PUBLIC_APP_CONFIG_ENDPOINT;\nexport const SANDBOX_ID = process.env.SANDBOX_ID;\n\nexport const THEME_STORAGE_KEY = 'theme-mode';\nexport const THEME_MEDIA_QUERY = '(prefers-color-scheme: dark)';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function transcriptionToChatMessage(\n  textStream: TextStreamData,\n  room: Room\n): ReceivedChatMessage {\n  return {\n    id: textStream.streamInfo.id,\n    timestamp: textStream.streamInfo.timestamp,\n    message: textStream.text,\n    from:\n      textStream.participantInfo.identity === room.localParticipant.identity\n        ? room.localParticipant\n        : Array.from(room.remoteParticipants.values()).find(\n            (p) => p.identity === textStream.participantInfo.identity\n          ),\n  };\n}\n\n// https://react.dev/reference/react/cache#caveats\n// > React will invalidate the cache for all memoized functions for each server request.\nexport const getAppConfig = cache(async (headers: Headers): Promise<AppConfig> => {\n  if (CONFIG_ENDPOINT) {\n    const sandboxId = SANDBOX_ID ?? headers.get('x-sandbox-id') ?? '';\n\n    try {\n      if (!sandboxId) {\n        throw new Error('Sandbox ID is required');\n      }\n\n      const response = await fetch(CONFIG_ENDPOINT, {\n        cache: 'no-store',\n        headers: { 'X-Sandbox-ID': sandboxId },\n      });\n\n      const remoteConfig: SandboxConfig = await response.json();\n      const config: AppConfig = { sandboxId, ...APP_CONFIG_DEFAULTS };\n\n      for (const [key, entry] of Object.entries(remoteConfig)) {\n        if (entry === null) continue;\n        // Only include app config entries that are declared in defaults and, if set,\n        // share the same primitive type as the default value.\n        if (\n          (key in APP_CONFIG_DEFAULTS &&\n            APP_CONFIG_DEFAULTS[key as keyof AppConfig] === undefined) ||\n          (typeof config[key as keyof AppConfig] === entry.type &&\n            typeof config[key as keyof AppConfig] === typeof entry.value)\n        ) {\n          // @ts-expect-error I'm not sure quite how to appease TypeScript, but we've thoroughly checked types above\n          config[key as keyof AppConfig] = entry.value as AppConfig[keyof AppConfig];\n        }\n      }\n\n      return config;\n    } catch (error) {\n      console.error('ERROR: getAppConfig() - lib/utils.ts', error);\n    }\n  }\n\n  return APP_CONFIG_DEFAULTS;\n});\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;;;;;AAGO,MAAM,kBAAkB,QAAQ,GAAG,CAAC,+BAA+B;AACnE,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU;AAEzC,MAAM,oBAAoB;AAC1B,MAAM,oBAAoB;AAE1B,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB;AAEO,SAAS,2BACd,UAA0B,EAC1B,IAAU;IAEV,OAAO;QACL,IAAI,WAAW,UAAU,CAAC,EAAE;QAC5B,WAAW,WAAW,UAAU,CAAC,SAAS;QAC1C,SAAS,WAAW,IAAI;QACxB,MACE,WAAW,eAAe,CAAC,QAAQ,KAAK,KAAK,gBAAgB,CAAC,QAAQ,GAClE,KAAK,gBAAgB,GACrB,MAAM,IAAI,CAAC,KAAK,kBAAkB,CAAC,MAAM,IAAI,IAAI,CAC/C,CAAC,IAAM,EAAE,QAAQ,KAAK,WAAW,eAAe,CAAC,QAAQ;IAEnE;AACF;AAIO,MAAM,eAAe,IAAA,8MAAK,EAAC,OAAO;IACvC,IAAI,iBAAiB;QACnB,MAAM,YAAY,cAAc,QAAQ,GAAG,CAAC,mBAAmB;QAE/D,IAAI;YACF,IAAI,CAAC,WAAW;gBACd,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,WAAW,MAAM,MAAM,iBAAiB;gBAC5C,OAAO;gBACP,SAAS;oBAAE,gBAAgB;gBAAU;YACvC;YAEA,MAAM,eAA8B,MAAM,SAAS,IAAI;YACvD,MAAM,SAAoB;gBAAE;gBAAW,GAAG,oIAAmB;YAAC;YAE9D,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,CAAC,cAAe;gBACvD,IAAI,UAAU,MAAM;gBACpB,6EAA6E;gBAC7E,sDAAsD;gBACtD,IACE,AAAC,OAAO,oIAAmB,IACzB,oIAAmB,CAAC,IAAuB,KAAK,aACjD,OAAO,MAAM,CAAC,IAAuB,KAAK,MAAM,IAAI,IACnD,OAAO,MAAM,CAAC,IAAuB,KAAK,OAAO,MAAM,KAAK,EAC9D;oBACA,0GAA0G;oBAC1G,MAAM,CAAC,IAAuB,GAAG,MAAM,KAAK;gBAC9C;YACF;YAEA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wCAAwC;QACxD;IACF;IAEA,OAAO,oIAAmB;AAC5B","debugId":null}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///Users/ashutosh/Attack%20Capital/assignment/frontend/app/layout.tsx"],"sourcesContent":["import { Public_Sans } from 'next/font/google';\nimport localFont from 'next/font/local';\nimport { headers } from 'next/headers';\nimport { APP_CONFIG_DEFAULTS } from '@/app-config';\nimport { ApplyThemeScript, ThemeToggle } from '@/components/theme-toggle';\nimport { getAppConfig } from '@/lib/utils';\nimport './globals.css';\n\nconst publicSans = Public_Sans({\n  variable: '--font-public-sans',\n  subsets: ['latin'],\n});\n\nconst commitMono = localFont({\n  src: [\n    {\n      path: './fonts/CommitMono-400-Regular.otf',\n      weight: '400',\n      style: 'normal',\n    },\n    {\n      path: './fonts/CommitMono-700-Regular.otf',\n      weight: '700',\n      style: 'normal',\n    },\n    {\n      path: './fonts/CommitMono-400-Italic.otf',\n      weight: '400',\n      style: 'italic',\n    },\n    {\n      path: './fonts/CommitMono-700-Italic.otf',\n      weight: '700',\n      style: 'italic',\n    },\n  ],\n  variable: '--font-commit-mono',\n});\n\ninterface RootLayoutProps {\n  children: React.ReactNode;\n}\n\nexport default async function RootLayout({ children }: RootLayoutProps) {\n  const hdrs = await headers();\n  const { accent, accentDark, pageTitle, pageDescription } = await getAppConfig(hdrs);\n\n  // check provided accent colors against defaults, and apply styles if they differ (or in development mode)\n  // generate a hover color for the accent color by mixing it with 20% black\n  const styles = [\n    process.env.NODE_ENV === 'development' || accent !== APP_CONFIG_DEFAULTS.accent\n      ? `:root { --primary: ${accent}; --primary-hover: color-mix(in srgb, ${accent} 80%, #000); }`\n      : '',\n    process.env.NODE_ENV === 'development' || accentDark !== APP_CONFIG_DEFAULTS.accentDark\n      ? `.dark { --primary: ${accentDark}; --primary-hover: color-mix(in srgb, ${accentDark} 80%, #000); }`\n      : '',\n  ]\n    .filter(Boolean)\n    .join('\\n');\n\n  return (\n    <html lang=\"en\" suppressHydrationWarning className=\"scroll-smooth\">\n      <head>\n        {styles && <style>{styles}</style>}\n        <title>{pageTitle}</title>\n        <meta name=\"description\" content={pageDescription} />\n      </head>\n      <body\n        className={`${publicSans.variable} ${commitMono.variable} overflow-x-hidden antialiased bg-background text-foreground`}\n      >\n        <main className=\"min-h-screen max-w-4xl mx-auto px-6 py-12 flex flex-col justify-center items-center gap-8\">\n          {children}\n        </main>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;;;;;;;;AAsCe,eAAe,WAAW,EAAE,QAAQ,EAAmB;IACpE,MAAM,OAAO,MAAM,IAAA,0IAAO;IAC1B,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,eAAe,EAAE,GAAG,MAAM,IAAA,4HAAY,EAAC;IAE9E,0GAA0G;IAC1G,0EAA0E;IAC1E,MAAM,SAAS;QACb,uCACI,CAAC,mBAAmB,EAAE,OAAO,sCAAsC,EAAE,OAAO,cAAc,CAAC,GAC3F;QACJ,uCACI,CAAC,mBAAmB,EAAE,WAAW,sCAAsC,EAAE,WAAW,cAAc,CAAC,GACnG;KACL,CACE,MAAM,CAAC,SACP,IAAI,CAAC;IAER,qBACE,8OAAC;QAAK,MAAK;QAAK,wBAAwB;QAAC,WAAU;;0BACjD,8OAAC;;oBACE,wBAAU,8OAAC;kCAAO;;;;;;kCACnB,8OAAC;kCAAO;;;;;;kCACR,8OAAC;wBAAK,MAAK;wBAAc,SAAS;;;;;;;;;;;;0BAEpC,8OAAC;gBACC,WAAW,GAAG,0JAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,qIAAU,CAAC,QAAQ,CAAC,4DAA4D,CAAC;0BAEtH,cAAA,8OAAC;oBAAK,WAAU;8BACb;;;;;;;;;;;;;;;;;AAKX","debugId":null}}]
}