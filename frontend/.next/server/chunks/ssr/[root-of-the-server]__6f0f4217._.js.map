{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/ashutosh/Attack%20Capital/assignment/frontend/app-config.ts"],"sourcesContent":["import type { AppConfig } from './lib/types';\n\nexport const APP_CONFIG_DEFAULTS: AppConfig = {\n  companyName: 'LiveKit',\n  pageTitle: 'LiveKit Voice Agent',\n  pageDescription: 'A voice agent built with LiveKit',\n\n  supportsChatInput: true,\n  supportsVideoInput: true,\n  supportsScreenShare: true,\n  isPreConnectBufferEnabled: true,\n\n  logo: '/lk-logo.svg',\n  accent: '#002cf2',\n  logoDark: '/lk-logo-dark.svg',\n  accentDark: '#1fd5f9',\n  startButtonText: 'Start call',\n\n  agentName: undefined,\n};\n"],"names":[],"mappings":";;;;AAEO,MAAM,sBAAiC;IAC5C,aAAa;IACb,WAAW;IACX,iBAAiB;IAEjB,mBAAmB;IACnB,oBAAoB;IACpB,qBAAqB;IACrB,2BAA2B;IAE3B,MAAM;IACN,QAAQ;IACR,UAAU;IACV,YAAY;IACZ,iBAAiB;IAEjB,WAAW;AACb","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///Users/ashutosh/Attack%20Capital/assignment/frontend/lib/utils.ts"],"sourcesContent":["import { cache } from 'react';\nimport { type ClassValue, clsx } from 'clsx';\nimport { Room } from 'livekit-client';\nimport { twMerge } from 'tailwind-merge';\nimport type { ReceivedChatMessage, TextStreamData } from '@livekit/components-react';\nimport { APP_CONFIG_DEFAULTS } from '@/app-config';\nimport type { AppConfig, SandboxConfig } from './types';\n\nexport const CONFIG_ENDPOINT = process.env.NEXT_PUBLIC_APP_CONFIG_ENDPOINT;\nexport const SANDBOX_ID = process.env.SANDBOX_ID;\n\nexport const THEME_STORAGE_KEY = 'theme-mode';\nexport const THEME_MEDIA_QUERY = '(prefers-color-scheme: dark)';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function transcriptionToChatMessage(\n  textStream: TextStreamData,\n  room: Room\n): ReceivedChatMessage {\n  return {\n    id: textStream.streamInfo.id,\n    timestamp: textStream.streamInfo.timestamp,\n    message: textStream.text,\n    from:\n      textStream.participantInfo.identity === room.localParticipant.identity\n        ? room.localParticipant\n        : Array.from(room.remoteParticipants.values()).find(\n            (p) => p.identity === textStream.participantInfo.identity\n          ),\n  };\n}\n\n// https://react.dev/reference/react/cache#caveats\n// > React will invalidate the cache for all memoized functions for each server request.\nexport const getAppConfig = cache(async (headers: Headers): Promise<AppConfig> => {\n  if (CONFIG_ENDPOINT) {\n    const sandboxId = SANDBOX_ID ?? headers.get('x-sandbox-id') ?? '';\n\n    try {\n      if (!sandboxId) {\n        throw new Error('Sandbox ID is required');\n      }\n\n      const response = await fetch(CONFIG_ENDPOINT, {\n        cache: 'no-store',\n        headers: { 'X-Sandbox-ID': sandboxId },\n      });\n\n      const remoteConfig: SandboxConfig = await response.json();\n      const config: AppConfig = { sandboxId, ...APP_CONFIG_DEFAULTS };\n\n      for (const [key, entry] of Object.entries(remoteConfig)) {\n        if (entry === null) continue;\n        // Only include app config entries that are declared in defaults and, if set,\n        // share the same primitive type as the default value.\n        if (\n          (key in APP_CONFIG_DEFAULTS &&\n            APP_CONFIG_DEFAULTS[key as keyof AppConfig] === undefined) ||\n          (typeof config[key as keyof AppConfig] === entry.type &&\n            typeof config[key as keyof AppConfig] === typeof entry.value)\n        ) {\n          // @ts-expect-error I'm not sure quite how to appease TypeScript, but we've thoroughly checked types above\n          config[key as keyof AppConfig] = entry.value as AppConfig[keyof AppConfig];\n        }\n      }\n\n      return config;\n    } catch (error) {\n      console.error('ERROR: getAppConfig() - lib/utils.ts', error);\n    }\n  }\n\n  return APP_CONFIG_DEFAULTS;\n});\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;;;;;AAGO,MAAM,kBAAkB,QAAQ,GAAG,CAAC,+BAA+B;AACnE,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU;AAEzC,MAAM,oBAAoB;AAC1B,MAAM,oBAAoB;AAE1B,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB;AAEO,SAAS,2BACd,UAA0B,EAC1B,IAAU;IAEV,OAAO;QACL,IAAI,WAAW,UAAU,CAAC,EAAE;QAC5B,WAAW,WAAW,UAAU,CAAC,SAAS;QAC1C,SAAS,WAAW,IAAI;QACxB,MACE,WAAW,eAAe,CAAC,QAAQ,KAAK,KAAK,gBAAgB,CAAC,QAAQ,GAClE,KAAK,gBAAgB,GACrB,MAAM,IAAI,CAAC,KAAK,kBAAkB,CAAC,MAAM,IAAI,IAAI,CAC/C,CAAC,IAAM,EAAE,QAAQ,KAAK,WAAW,eAAe,CAAC,QAAQ;IAEnE;AACF;AAIO,MAAM,eAAe,IAAA,8MAAK,EAAC,OAAO;IACvC,IAAI,iBAAiB;QACnB,MAAM,YAAY,cAAc,QAAQ,GAAG,CAAC,mBAAmB;QAE/D,IAAI;YACF,IAAI,CAAC,WAAW;gBACd,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,WAAW,MAAM,MAAM,iBAAiB;gBAC5C,OAAO;gBACP,SAAS;oBAAE,gBAAgB;gBAAU;YACvC;YAEA,MAAM,eAA8B,MAAM,SAAS,IAAI;YACvD,MAAM,SAAoB;gBAAE;gBAAW,GAAG,oIAAmB;YAAC;YAE9D,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,CAAC,cAAe;gBACvD,IAAI,UAAU,MAAM;gBACpB,6EAA6E;gBAC7E,sDAAsD;gBACtD,IACE,AAAC,OAAO,oIAAmB,IACzB,oIAAmB,CAAC,IAAuB,KAAK,aACjD,OAAO,MAAM,CAAC,IAAuB,KAAK,MAAM,IAAI,IACnD,OAAO,MAAM,CAAC,IAAuB,KAAK,OAAO,MAAM,KAAK,EAC9D;oBACA,0GAA0G;oBAC1G,MAAM,CAAC,IAAuB,GAAG,MAAM,KAAK;gBAC9C;YACF;YAEA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wCAAwC;QACxD;IACF;IAEA,OAAO,oIAAmB;AAC5B","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///Users/ashutosh/Attack%20Capital/assignment/frontend/components/theme-toggle.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { MonitorIcon, MoonIcon, SunIcon } from '@phosphor-icons/react';\nimport type { ThemeMode } from '@/lib/types';\nimport { THEME_MEDIA_QUERY, THEME_STORAGE_KEY, cn } from '@/lib/utils';\n\nconst THEME_SCRIPT = `\n  const doc = document.documentElement;\n  const theme = localStorage.getItem(\"${THEME_STORAGE_KEY}\") ?? \"system\";\n\n  if (theme === \"system\") {\n    if (window.matchMedia(\"${THEME_MEDIA_QUERY}\").matches) {\n      doc.classList.add(\"dark\");\n    } else {\n      doc.classList.add(\"light\");\n    }\n  } else {\n    doc.classList.add(theme);\n  }\n`\n  .trim()\n  .replace(/\\n/g, '')\n  .replace(/\\s+/g, ' ');\n\nfunction applyTheme(theme: ThemeMode) {\n  const doc = document.documentElement;\n\n  doc.classList.remove('dark', 'light');\n  localStorage.setItem(THEME_STORAGE_KEY, theme);\n\n  if (theme === 'system') {\n    if (window.matchMedia(THEME_MEDIA_QUERY).matches) {\n      doc.classList.add('dark');\n    } else {\n      doc.classList.add('light');\n    }\n  } else {\n    doc.classList.add(theme);\n  }\n}\n\ninterface ThemeToggleProps {\n  className?: string;\n}\n\nexport function ApplyThemeScript() {\n  return <script id=\"theme-script\">{THEME_SCRIPT}</script>;\n}\n\nexport function ThemeToggle({ className }: ThemeToggleProps) {\n  const [theme, setTheme] = useState<ThemeMode | undefined>(undefined);\n\n  useEffect(() => {\n    const storedTheme = (localStorage.getItem(THEME_STORAGE_KEY) as ThemeMode) ?? 'system';\n\n    setTheme(storedTheme);\n  }, []);\n\n  function handleThemeChange(theme: ThemeMode) {\n    applyTheme(theme);\n    setTheme(theme);\n  }\n\n  return (\n    <div\n      className={cn(\n        'text-foreground bg-background flex w-full flex-row justify-end divide-x overflow-hidden rounded-full border',\n        className\n      )}\n    >\n      <span className=\"sr-only\">Color scheme toggle</span>\n      <button\n        type=\"button\"\n        onClick={() => handleThemeChange('dark')}\n        className=\"cursor-pointer p-1 pl-1.5\"\n      >\n        <span className=\"sr-only\">Enable dark color scheme</span>\n        <MoonIcon size={16} weight=\"bold\" className={cn(theme !== 'dark' && 'opacity-25')} />\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => handleThemeChange('light')}\n        className=\"cursor-pointer px-1.5 py-1\"\n      >\n        <span className=\"sr-only\">Enable light color scheme</span>\n        <SunIcon size={16} weight=\"bold\" className={cn(theme !== 'light' && 'opacity-25')} />\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => handleThemeChange('system')}\n        className=\"cursor-pointer p-1 pr-1.5\"\n      >\n        <span className=\"sr-only\">Enable system color scheme</span>\n        <MonitorIcon size={16} weight=\"bold\" className={cn(theme !== 'system' && 'opacity-25')} />\n      </button>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAAA;AAAA;AAEA;AALA;;;;;AAOA,MAAM,eAAe,CAAC;;sCAEgB,EAAE,iIAAiB,CAAC;;;2BAG/B,EAAE,iIAAiB,CAAC;;;;;;;;AAQ/C,CAAC,CACE,IAAI,GACJ,OAAO,CAAC,OAAO,IACf,OAAO,CAAC,QAAQ;AAEnB,SAAS,WAAW,KAAgB;IAClC,MAAM,MAAM,SAAS,eAAe;IAEpC,IAAI,SAAS,CAAC,MAAM,CAAC,QAAQ;IAC7B,aAAa,OAAO,CAAC,iIAAiB,EAAE;IAExC,IAAI,UAAU,UAAU;QACtB,IAAI,OAAO,UAAU,CAAC,iIAAiB,EAAE,OAAO,EAAE;YAChD,IAAI,SAAS,CAAC,GAAG,CAAC;QACpB,OAAO;YACL,IAAI,SAAS,CAAC,GAAG,CAAC;QACpB;IACF,OAAO;QACL,IAAI,SAAS,CAAC,GAAG,CAAC;IACpB;AACF;AAMO,SAAS;IACd,qBAAO,8OAAC;QAAO,IAAG;kBAAgB;;;;;;AACpC;AAEO,SAAS,YAAY,EAAE,SAAS,EAAoB;IACzD,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAwB;IAE1D,IAAA,kNAAS,EAAC;QACR,MAAM,cAAc,AAAC,aAAa,OAAO,CAAC,iIAAiB,KAAmB;QAE9E,SAAS;IACX,GAAG,EAAE;IAEL,SAAS,kBAAkB,KAAgB;QACzC,WAAW;QACX,SAAS;IACX;IAEA,qBACE,8OAAC;QACC,WAAW,IAAA,kHAAE,EACX,+GACA;;0BAGF,8OAAC;gBAAK,WAAU;0BAAU;;;;;;0BAC1B,8OAAC;gBACC,MAAK;gBACL,SAAS,IAAM,kBAAkB;gBACjC,WAAU;;kCAEV,8OAAC;wBAAK,WAAU;kCAAU;;;;;;kCAC1B,8OAAC,qLAAQ;wBAAC,MAAM;wBAAI,QAAO;wBAAO,WAAW,IAAA,kHAAE,EAAC,UAAU,UAAU;;;;;;;;;;;;0BAEtE,8OAAC;gBACC,MAAK;gBACL,SAAS,IAAM,kBAAkB;gBACjC,WAAU;;kCAEV,8OAAC;wBAAK,WAAU;kCAAU;;;;;;kCAC1B,8OAAC,mLAAO;wBAAC,MAAM;wBAAI,QAAO;wBAAO,WAAW,IAAA,kHAAE,EAAC,UAAU,WAAW;;;;;;;;;;;;0BAEtE,8OAAC;gBACC,MAAK;gBACL,SAAS,IAAM,kBAAkB;gBACjC,WAAU;;kCAEV,8OAAC;wBAAK,WAAU;kCAAU;;;;;;kCAC1B,8OAAC,2LAAW;wBAAC,MAAM;wBAAI,QAAO;wBAAO,WAAW,IAAA,kHAAE,EAAC,UAAU,YAAY;;;;;;;;;;;;;;;;;;AAIjF","debugId":null}}]
}