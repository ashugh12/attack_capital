{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///Users/ashutosh/Attack%20Capital/assignment/frontend/hooks/useConnectionDetails.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { decodeJwt } from 'jose';\nimport { ConnectionDetails } from '@/app/api/connection-details/route';\nimport { AppConfig } from '@/lib/types';\n\nconst ONE_MINUTE_IN_MILLISECONDS = 60 * 1000;\n\nexport default function useConnectionDetails(appConfig: AppConfig) {\n  // Generate room connection details, including:\n  //   - A random Room name\n  //   - A random Participant name\n  //   - An Access Token to permit the participant to join the room\n  //   - The URL of the LiveKit server to connect to\n  //\n  // In real-world application, you would likely allow the user to specify their\n  // own participant name, and possibly to choose from existing rooms to join.\n\n  const [connectionDetails, setConnectionDetails] = useState<ConnectionDetails | null>(null);\n\n  const fetchConnectionDetails = useCallback(async () => {\n    setConnectionDetails(null);\n    const url = new URL(\n      process.env.NEXT_PUBLIC_CONN_DETAILS_ENDPOINT ?? '/api/connection-details',\n      window.location.origin\n    );\n\n    let data: ConnectionDetails;\n    try {\n      const res = await fetch(url.toString(), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Sandbox-Id': appConfig.sandboxId ?? '',\n        },\n        body: JSON.stringify({\n          room_config: appConfig.agentName\n            ? {\n                agents: [{ agent_name: appConfig.agentName }],\n              }\n            : undefined,\n        }),\n      });\n      data = await res.json();\n    } catch (error) {\n      console.error('Error fetching connection details:', error);\n      throw new Error('Error fetching connection details!');\n    }\n\n    setConnectionDetails(data);\n    return data;\n  }, []);\n\n  useEffect(() => {\n    fetchConnectionDetails();\n  }, [fetchConnectionDetails]);\n\n  const isConnectionDetailsExpired = useCallback(() => {\n    const token = connectionDetails?.participantToken;\n    if (!token) {\n      return true;\n    }\n\n    const jwtPayload = decodeJwt(token);\n    if (!jwtPayload.exp) {\n      return true;\n    }\n    const expiresAt = new Date(jwtPayload.exp * 1000 - ONE_MINUTE_IN_MILLISECONDS);\n\n    const now = new Date();\n    return expiresAt <= now;\n  }, [connectionDetails?.participantToken]);\n\n  const existingOrRefreshConnectionDetails = useCallback(async () => {\n    if (isConnectionDetailsExpired() || !connectionDetails) {\n      return fetchConnectionDetails();\n    } else {\n      return connectionDetails;\n    }\n  }, [connectionDetails, fetchConnectionDetails, isConnectionDetailsExpired]);\n\n  return {\n    connectionDetails,\n    refreshConnectionDetails: fetchConnectionDetails,\n    existingOrRefreshConnectionDetails,\n  };\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAIA,MAAM,6BAA6B,KAAK;AAEzB,SAAS,qBAAqB,SAAoB;IAC/D,+CAA+C;IAC/C,yBAAyB;IACzB,gCAAgC;IAChC,iEAAiE;IACjE,kDAAkD;IAClD,EAAE;IACF,8EAA8E;IAC9E,4EAA4E;IAE5E,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,IAAA,iNAAQ,EAA2B;IAErF,MAAM,yBAAyB,IAAA,oNAAW,EAAC;QACzC,qBAAqB;QACrB,MAAM,MAAM,IAAI,IACd,QAAQ,GAAG,CAAC,iCAAiC,IAAI,2BACjD,OAAO,QAAQ,CAAC,MAAM;QAGxB,IAAI;QACJ,IAAI;YACF,MAAM,MAAM,MAAM,MAAM,IAAI,QAAQ,IAAI;gBACtC,QAAQ;gBACR,SAAS;oBACP,gBAAgB;oBAChB,gBAAgB,UAAU,SAAS,IAAI;gBACzC;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB,aAAa,UAAU,SAAS,GAC5B;wBACE,QAAQ;4BAAC;gCAAE,YAAY,UAAU,SAAS;4BAAC;yBAAE;oBAC/C,IACA;gBACN;YACF;YACA,OAAO,MAAM,IAAI,IAAI;QACvB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sCAAsC;YACpD,MAAM,IAAI,MAAM;QAClB;QAEA,qBAAqB;QACrB,OAAO;IACT,GAAG,EAAE;IAEL,IAAA,kNAAS,EAAC;QACR;IACF,GAAG;QAAC;KAAuB;IAE3B,MAAM,6BAA6B,IAAA,oNAAW,EAAC;QAC7C,MAAM,QAAQ,mBAAmB;QACjC,IAAI,CAAC,OAAO;YACV,OAAO;QACT;QAEA,MAAM,aAAa,IAAA,8KAAS,EAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,EAAE;YACnB,OAAO;QACT;QACA,MAAM,YAAY,IAAI,KAAK,WAAW,GAAG,GAAG,OAAO;QAEnD,MAAM,MAAM,IAAI;QAChB,OAAO,aAAa;IACtB,GAAG;QAAC,mBAAmB;KAAiB;IAExC,MAAM,qCAAqC,IAAA,oNAAW,EAAC;QACrD,IAAI,gCAAgC,CAAC,mBAAmB;YACtD,OAAO;QACT,OAAO;YACL,OAAO;QACT;IACF,GAAG;QAAC;QAAmB;QAAwB;KAA2B;IAE1E,OAAO;QACL;QACA,0BAA0B;QAC1B;IACF;AACF","debugId":null}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file:///Users/ashutosh/Attack%20Capital/assignment/frontend/components/app.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { Room, RoomEvent } from 'livekit-client';\nimport { motion } from 'motion/react';\nimport { RoomAudioRenderer, RoomContext, StartAudio } from '@livekit/components-react';\nimport { toastAlert } from '@/components/alert-toast';\nimport { SessionView } from '@/components/session-view';\nimport { Toaster } from '@/components/ui/sonner';\nimport { Welcome } from '@/components/welcome';\nimport useConnectionDetails from '@/hooks/useConnectionDetails';\nimport type { AppConfig } from '@/lib/types';\n\nconst MotionWelcome = motion.create(Welcome);\nconst MotionSessionView = motion.create(SessionView);\n\ninterface AppProps {\n  appConfig: AppConfig;\n}\n\nexport function App({ appConfig }: AppProps) {\n  const room = useMemo(() => new Room(), []);\n  const [sessionStarted, setSessionStarted] = useState(false);\n  const { refreshConnectionDetails, existingOrRefreshConnectionDetails } =\n    useConnectionDetails(appConfig);\n\n  useEffect(() => {\n    const onDisconnected = () => {\n      setSessionStarted(false);\n      refreshConnectionDetails();\n    };\n    const onMediaDevicesError = (error: Error) => {\n      toastAlert({\n        title: 'Encountered an error with your media devices',\n        description: `${error.name}: ${error.message}`,\n      });\n    };\n    room.on(RoomEvent.MediaDevicesError, onMediaDevicesError);\n    room.on(RoomEvent.Disconnected, onDisconnected);\n    return () => {\n      room.off(RoomEvent.Disconnected, onDisconnected);\n      room.off(RoomEvent.MediaDevicesError, onMediaDevicesError);\n    };\n  }, [room, refreshConnectionDetails]);\n\n  useEffect(() => {\n    let aborted = false;\n    if (sessionStarted && room.state === 'disconnected') {\n      Promise.all([\n        room.localParticipant.setMicrophoneEnabled(true, undefined, {\n          preConnectBuffer: appConfig.isPreConnectBufferEnabled,\n        }),\n        existingOrRefreshConnectionDetails().then((connectionDetails) =>\n          room.connect(connectionDetails.serverUrl, connectionDetails.participantToken)\n        ),\n      ]).catch((error) => {\n        if (aborted) {\n          // Once the effect has cleaned up after itself, drop any errors\n          //\n          // These errors are likely caused by this effect rerunning rapidly,\n          // resulting in a previous run `disconnect` running in parallel with\n          // a current run `connect`\n          return;\n        }\n\n        toastAlert({\n          title: 'There was an error connecting to the agent',\n          description: `${error.name}: ${error.message}`,\n        });\n      });\n    }\n    return () => {\n      aborted = true;\n      room.disconnect();\n    };\n  }, [room, sessionStarted, appConfig.isPreConnectBufferEnabled]);\n\n  const { startButtonText } = appConfig;\n\n  return (\n    <main>\n      <MotionWelcome\n        key=\"welcome\"\n        startButtonText={startButtonText}\n        onStartCall={() => setSessionStarted(true)}\n        disabled={sessionStarted}\n        initial={{ opacity: 1 }}\n        animate={{ opacity: sessionStarted ? 0 : 1 }}\n        transition={{ duration: 0.5, ease: 'linear', delay: sessionStarted ? 0 : 0.5 }}\n      />\n\n      <RoomContext.Provider value={room}>\n        <RoomAudioRenderer />\n        <StartAudio label=\"Start Audio\" />\n        {/* --- */}\n        <MotionSessionView\n          key=\"session-view\"\n          appConfig={appConfig}\n          disabled={!sessionStarted}\n          sessionStarted={sessionStarted}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: sessionStarted ? 1 : 0 }}\n          transition={{\n            duration: 0.5,\n            ease: 'linear',\n            delay: sessionStarted ? 0.5 : 0,\n          }}\n        />\n      </RoomContext.Provider>\n\n      <Toaster />\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;;;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;AAKA;AAVA;;;;;;;;;;;AAaA,MAAM,gBAAgB,OAAO,MAAM,CAAC;AACpC,MAAM,oBAAoB,OAAO,MAAM,CAAC;AAMjC,SAAS,IAAI,EAAE,SAAS,EAAY;IACzC,MAAM,OAAO,IAAA,gNAAO,EAAC,IAAM,IAAI,8KAAI,IAAI,EAAE;IACzC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,iNAAQ,EAAC;IACrD,MAAM,EAAE,wBAAwB,EAAE,kCAAkC,EAAE,GACpE,IAAA,wIAAoB,EAAC;IAEvB,IAAA,kNAAS,EAAC;QACR,MAAM,iBAAiB;YACrB,kBAAkB;YAClB;QACF;QACA,MAAM,sBAAsB,CAAC;YAC3B,WAAW;gBACT,OAAO;gBACP,aAAa,GAAG,MAAM,IAAI,CAAC,EAAE,EAAE,MAAM,OAAO,EAAE;YAChD;QACF;QACA,KAAK,EAAE,CAAC,mLAAS,CAAC,iBAAiB,EAAE;QACrC,KAAK,EAAE,CAAC,mLAAS,CAAC,YAAY,EAAE;QAChC,OAAO;YACL,KAAK,GAAG,CAAC,mLAAS,CAAC,YAAY,EAAE;YACjC,KAAK,GAAG,CAAC,mLAAS,CAAC,iBAAiB,EAAE;QACxC;IACF,GAAG;QAAC;QAAM;KAAyB;IAEnC,IAAA,kNAAS,EAAC;QACR,IAAI,UAAU;QACd,IAAI,kBAAkB,KAAK,KAAK,KAAK,gBAAgB;YACnD,QAAQ,GAAG,CAAC;gBACV,KAAK,gBAAgB,CAAC,oBAAoB,CAAC,MAAM,WAAW;oBAC1D,kBAAkB,UAAU,yBAAyB;gBACvD;gBACA,qCAAqC,IAAI,CAAC,CAAC,oBACzC,KAAK,OAAO,CAAC,kBAAkB,SAAS,EAAE,kBAAkB,gBAAgB;aAE/E,EAAE,KAAK,CAAC,CAAC;gBACR,IAAI,SAAS;oBACX,+DAA+D;oBAC/D,EAAE;oBACF,mEAAmE;oBACnE,oEAAoE;oBACpE,0BAA0B;oBAC1B;gBACF;gBAEA,WAAW;oBACT,OAAO;oBACP,aAAa,GAAG,MAAM,IAAI,CAAC,EAAE,EAAE,MAAM,OAAO,EAAE;gBAChD;YACF;QACF;QACA,OAAO;YACL,UAAU;YACV,KAAK,UAAU;QACjB;IACF,GAAG;QAAC;QAAM;QAAgB,UAAU,yBAAyB;KAAC;IAE9D,MAAM,EAAE,eAAe,EAAE,GAAG;IAE5B,qBACE,8OAAC;;0BACC,8OAAC;gBAEC,iBAAiB;gBACjB,aAAa,IAAM,kBAAkB;gBACrC,UAAU;gBACV,SAAS;oBAAE,SAAS;gBAAE;gBACtB,SAAS;oBAAE,SAAS,iBAAiB,IAAI;gBAAE;gBAC3C,YAAY;oBAAE,UAAU;oBAAK,MAAM;oBAAU,OAAO,iBAAiB,IAAI;gBAAI;eANzE;;;;;0BASN,8OAAC,oOAAW,CAAC,QAAQ;gBAAC,OAAO;;kCAC3B,8OAAC,kPAAiB;;;;;kCAClB,8OAAC,oOAAU;wBAAC,OAAM;;;;;;kCAElB,8OAAC;wBAEC,WAAW;wBACX,UAAU,CAAC;wBACX,gBAAgB;wBAChB,SAAS;4BAAE,SAAS;wBAAE;wBACtB,SAAS;4BAAE,SAAS,iBAAiB,IAAI;wBAAE;wBAC3C,YAAY;4BACV,UAAU;4BACV,MAAM;4BACN,OAAO,iBAAiB,MAAM;wBAChC;uBAVI;;;;;;;;;;;0BAcR,8OAAC;;;;;;;;;;;AAGP","debugId":null}}]
}